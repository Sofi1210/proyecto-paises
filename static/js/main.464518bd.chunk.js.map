{"version":3,"sources":["components/util/api.js","components/Search/SearchInput.jsx","components/FilterCountry/FilterCountry.jsx","components/AllCountries/AllCountries.jsx","components/CountryInfo/CountryInfo.jsx","App.js","index.js"],"names":["apiURL","SearchInput","onSearch","useState","input","setInput","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","FilterCountry","onSelect","regionName","className","AllCountries","countries","setCountries","isLoading","setIsLoading","error","setError","getAllCountries","a","fetch","res","ok","Error","json","data","console","log","message","getCountryByName","countryName","getCountryByRegion","useEffect","map","country","to","name","common","src","flags","png","alt","Intl","NumberFormat","format","population","region","capital","CountryInfo","setCountry","useParams","borders","index","subregion","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAAaA,EAAS,iC,OCuBPC,EArBK,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SACrB,EAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KAQtB,OACE,sBAAMC,SAPc,SAACC,GACrBA,EAAEC,iBAEFN,EAASE,IAIqB,SAC5B,uBACEK,KAAK,OACLC,YAAY,yBACZC,MAAOP,EACPQ,SAAU,SAACL,GAAC,OAAKF,EAASE,EAAEM,OAAOF,aCa5BG,EA5BO,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SAMvB,OACE,yBAAQH,SANY,SAACL,GACrB,IAAMS,EAAaT,EAAEM,OAAOF,MAC5BI,EAASC,IAIuB,UAC9B,wBAAQC,UAAU,SAAQ,SAAC,qBAC3B,wBAAQA,UAAU,SAASN,MAAM,SAAQ,SAAC,WAG1C,wBAAQM,UAAU,SAASN,MAAM,UAAS,SAAC,YAG3C,wBAAQM,UAAU,SAASN,MAAM,OAAM,SAAC,SAGxC,wBAAQM,UAAU,SAASN,MAAM,SAAQ,SAAC,WAG1C,wBAAQM,UAAU,SAASN,MAAM,UAAS,SAAC,gBCsFlCO,EArGM,WACnB,MAAkCf,mBAAS,IAAG,mBAAvCgB,EAAS,KAAEC,EAAY,KAC9B,EAAkCjB,oBAAS,GAAK,mBAAzCkB,EAAS,KAAEC,EAAY,KAC9B,EAA0BnB,mBAAS,IAAG,mBAA/BoB,EAAK,KAAEC,EAAQ,KAEhBC,EAAe,uCAAG,8BAAAC,EAAA,+EAEFC,MAAM,GAAD,OAAI3B,EAAM,SAAQ,KAAD,EAA/B,IAAH4B,EAAG,QAEAC,GAAG,CAAD,qBAAQ,IAAIC,MAAM,yBAAyB,KAAD,kBAElCF,EAAIG,OAAO,KAAD,EAAvBC,EAAI,OAEVC,QAAQC,IAAIF,GAEZZ,EAAaY,GAEbV,GAAa,GAAO,kDAEpBA,GAAa,GACbE,EAAS,KAAMW,SAAS,0DAE3B,kBAjBoB,mCAmBfC,EAAgB,uCAAG,WAAOC,GAAW,kGAErBV,MAAM,GAAD,OAAI3B,EAAM,iBAASqC,IAAe,KAAD,EAA/C,IAAHT,EAAG,QAEAC,GAAG,CAAD,qBAAQ,IAAIC,MAAM,0BAA0B,KAAD,kBAEnCF,EAAIG,OAAO,KAAD,EAAvBC,EAAI,OACVZ,EAAaY,GAEbV,GAAa,GAAO,kDAEpBA,GAAa,GACbE,EAAS,KAAMW,SAAS,0DAE3B,gBAdqB,sCAgBhBG,EAAkB,uCAAG,WAAOtB,GAAU,kGAEtBW,MAAM,GAAD,OAAI3B,EAAM,mBAAWgB,IAAc,KAAD,EAAhD,IAAHY,EAAG,QAEAC,GAAG,CAAD,qBAAQ,IAAIC,MAAM,oBAAoB,KAAD,kBAE7BF,EAAIG,OAAO,KAAD,EAAvBC,EAAI,OACVZ,EAAaY,GAEbV,GAAa,GAAO,kDAEpBA,GAAa,GACbE,GAAS,GAAO,0DAEnB,gBAduB,sCAoBxB,OAJAe,qBAAU,WACRd,MACC,IAGD,sBAAKR,UAAU,wBAAuB,UACpC,sBAAKA,UAAU,eAAc,UAC3B,qBAAKA,UAAU,SAAQ,SACrB,cAAC,EAAW,CAACf,SAAUkC,MAGzB,qBAAKnB,UAAU,SAAQ,SACrB,cAAC,EAAa,CAACF,SAAUuB,SAI7B,sBAAKrB,UAAU,kBAAiB,UAC7BI,IAAcE,GAAS,6BAAI,oBAC3BA,IAAUF,GAAa,6BAAKE,IAEnB,OAATJ,QAAS,IAATA,OAAS,EAATA,EAAWqB,KAAI,SAACC,GAAO,OACtB,cAAC,IAAI,CAACC,GAAE,mBAAcD,EAAQE,KAAKC,QAAS,SAC1C,sBAAK3B,UAAU,gBAAe,UAC5B,qBAAKA,UAAU,eAAc,SAC3B,qBAAK4B,IAAKJ,EAAQK,MAAMC,IAAKC,IAAI,OAGnC,sBAAK/B,UAAU,gBAAe,UAC5B,6BAAKwB,EAAQE,KAAKC,SAClB,+BACG,IAAI,cACO,KACX,IAAIK,KAAKC,cAAeC,OAAOV,EAAQW,eAE1C,+BAAI,YAAUX,EAAQY,UACtB,+BAAI,YAAUZ,EAAQa,6BCvBvBC,EAvEK,WAClB,MAA8BpD,mBAAS,IAAG,mBAAnCsC,EAAO,KAAEe,EAAU,KAC1B,EAAkCrD,oBAAS,GAAK,mBAAzCkB,EAAS,KAAEC,EAAY,KAC9B,EAA0BnB,mBAAS,IAAG,mBAA/BoB,EAAK,KAAEC,EAAQ,KAEda,EAAgBoB,cAAhBpB,YAEQI,EAAQD,KAAI,SAACC,GAAO,OAAKA,EAAQiB,WAsBjD,OApBAnB,qBAAU,WACR,IAAMH,EAAgB,uCAAG,8BAAAV,EAAA,+EAEHC,MAAM,GAAD,OAAI3B,EAAM,iBAASqC,IAAe,KAAD,EAA/C,IAAHT,EAAG,QAEAC,GAAG,CAAD,qBAAQ,IAAIC,MAAM,oBAAoB,KAAD,kBAE7BF,EAAIG,OAAO,KAAD,EAAvBC,EAAI,OAEVwB,EAAWxB,GACXV,GAAa,GAAO,kDAEpBA,GAAa,GACbE,EAAS,KAAMW,SAAS,0DAE3B,kBAdqB,mCAgBtBC,MACC,CAACC,IAGF,sBAAKpB,UAAU,yBAAwB,UACrC,iCACE,cAAC,IAAI,CAACyB,GAAG,IAAG,SAAC,WAGdrB,IAAcE,GAAS,6BAAI,oBAC3BA,IAAUF,GAAa,CAAEE,SAElB,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAASD,KAAI,SAACC,EAASkB,GAAK,OAC3B,sBAAK1C,UAAU,2BAA0B,UACvC,qBAAKA,UAAU,oBAAmB,SAChC,qBAAK4B,IAAKJ,EAAQK,MAAMC,IAAKC,IAAI,OAGnC,sBAAK/B,UAAU,gBAAe,UAC5B,6BAAKwB,EAAQE,KAAKC,SAElB,sBAAK3B,UAAU,qBAAoB,UACjC,+BAAI,cACU,IACZ,gCACG,IAAIgC,KAAKC,cAAeC,OAAOV,EAAQW,iBAG5C,+BAAI,WACM,+BAAOX,EAAQY,YAEzB,+BAAI,eACU,+BAAOZ,EAAQmB,eAE7B,+BAAI,YACO,+BAAOnB,EAAQa,qBAtBeK,UCpBxCE,MAlBf,WACE,OACE,qCACE,qBAAK5C,UAAU,SAAQ,SACrB,qBAAKA,UAAU,YAAW,SACxB,6BAAI,2BAGR,qBAAKA,UAAU,YAAW,SACxB,eAAC,IAAM,WACL,cAAC,IAAK,CAAC6C,KAAK,IAAIC,QAAS,cAAC,EAAY,MACtC,cAAC,IAAK,CAACD,KAAK,wBAAwBC,QAAS,cAAC,EAAW,eCVnEC,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,IAAM,UACL,cAAC,EAAG,QAGRC,SAASC,eAAe,W","file":"static/js/main.464518bd.chunk.js","sourcesContent":["export const apiURL = \"https://restcountries.com/v3.1\";\n","import React, { useState } from \"react\";\n\nconst SearchInput = ({ onSearch }) => {\n  const [input, setInput] = useState(\"\");\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    onSearch(input);\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <input\n        type=\"text\"\n        placeholder=\"Search a country......\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n    </form>\n  );\n};\n\nexport default SearchInput;\n","import React from \"react\";\n\nconst FilterCountry = ({ onSelect }) => {\n  const selectHandler = (e) => {\n    const regionName = e.target.value;\n    onSelect(regionName);\n  };\n\n  return (\n    <select onChange={selectHandler}>\n      <option className=\"option\">Filter by Region</option>\n      <option className=\"option\" value=\"Africa\">\n        Africa\n      </option>\n      <option className=\"option\" value=\"America\">\n        America\n      </option>\n      <option className=\"option\" value=\"Asia\">\n        Asia\n      </option>\n      <option className=\"option\" value=\"Europe\">\n        Europe\n      </option>\n      <option className=\"option\" value=\"Oceania\">\n        Oceania\n      </option>\n    </select>\n  );\n};\n\nexport default FilterCountry;\n","import React, { useState, useEffect } from \"react\";\nimport { apiURL } from \"../util/api\";\n\nimport SearchInput from \"../Search/SearchInput\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\n\nimport { Link } from \"react-router-dom\";\n\nconst AllCountries = () => {\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const getAllCountries = async () => {\n    try {\n      const res = await fetch(`${apiURL}/all`);\n\n      if (!res.ok) throw new Error(\"Something went wrong!\");\n\n      const data = await res.json();\n\n      console.log(data);\n\n      setCountries(data);\n\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n\n  const getCountryByName = async (countryName) => {\n    try {\n      const res = await fetch(`${apiURL}/name/${countryName}`);\n\n      if (!res.ok) throw new Error(\"Not found any country!\");\n\n      const data = await res.json();\n      setCountries(data);\n\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n\n  const getCountryByRegion = async (regionName) => {\n    try {\n      const res = await fetch(`${apiURL}/region/${regionName}`);\n\n      if (!res.ok) throw new Error(\"Failed..........\");\n\n      const data = await res.json();\n      setCountries(data);\n\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(false);\n    }\n  };\n\n  useEffect(() => {\n    getAllCountries();\n  }, []);\n\n  return (\n    <div className=\"all__country__wrapper\">\n      <div className=\"country__top\">\n        <div className=\"search\">\n          <SearchInput onSearch={getCountryByName} />\n        </div>\n\n        <div className=\"filter\">\n          <FilterCountry onSelect={getCountryByRegion} />\n        </div>\n      </div>\n\n      <div className=\"country__bottom\">\n        {isLoading && !error && <h4>Loading........</h4>}\n        {error && !isLoading && <h4>{error}</h4>}\n\n        {countries?.map((country) => (\n          <Link to={`/country/${country.name.common}`}>\n            <div className=\"country__card\">\n              <div className=\"country__img\">\n                <img src={country.flags.png} alt=\"\" />\n              </div>\n\n              <div className=\"country__data\">\n                <h3>{country.name.common}</h3>\n                <h6>\n                  {\" \"}\n                  Population:{\" \"}\n                  {new Intl.NumberFormat().format(country.population)}\n                </h6>\n                <h6> Region: {country.region}</h6>\n                <h6>Capital: {country.capital}</h6>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AllCountries;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { apiURL } from \"../util/api\";\nimport { Link } from \"react-router-dom\";\n\nconst CountryInfo = () => {\n  const [country, setCountry] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const { countryName } = useParams();\n\n  const borders = country.map((country) => country.borders);\n\n  useEffect(() => {\n    const getCountryByName = async () => {\n      try {\n        const res = await fetch(`${apiURL}/name/${countryName}`);\n\n        if (!res.ok) throw new Error(\"Could not found!\");\n\n        const data = await res.json();\n\n        setCountry(data);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        setError(error.message);\n      }\n    };\n\n    getCountryByName();\n  }, [countryName]);\n\n  return (\n    <div className=\"country__info__wrapper\">\n      <button>\n        <Link to=\"/\">Back</Link>\n      </button>\n\n      {isLoading && !error && <h4>Loading........</h4>}\n      {error && !isLoading && { error }}\n\n      {country?.map((country, index) => (\n        <div className=\"country__info__container\" key={index}>\n          <div className=\"country__info-img\">\n            <img src={country.flags.png} alt=\"\" />\n          </div>\n\n          <div className=\"country__info\">\n            <h3>{country.name.common}</h3>\n\n            <div className=\"country__info-left\">\n              <h5>\n                Population:{\" \"}\n                <span>\n                  {new Intl.NumberFormat().format(country.population)}\n                </span>\n              </h5>\n              <h5>\n                Region: <span>{country.region}</span>\n              </h5>\n              <h5>\n                Sub Region: <span>{country.subregion}</span>\n              </h5>\n              <h5>\n                Capital: <span>{country.capital}</span>\n              </h5>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CountryInfo;\n","import React from \"react\";\nimport \"./app.css\"; \nimport { Routes, Route } from \"react-router-dom\";\nimport AllCountries from \"./components/AllCountries/AllCountries\";\nimport CountryInfo from \"./components/CountryInfo/CountryInfo\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"header\">\n        <div className=\"container\">\n          <h5>Where in the world</h5>\n        </div>\n      </div>\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<AllCountries />} />\n          <Route path=\"/country/:countryName\" element={<CountryInfo />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}